import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { post__auth_sellerUser_password_reset_request } from "../../../../../../providers/post__auth_sellerUser_password_reset_request";
import { SelleruserAuth } from "../../../../../../decorators/SelleruserAuth";
import { SelleruserPayload } from "../../../../../../decorators/payload/SelleruserPayload";

import { IShoppingMallSellerUser } from "../../../../../../api/structures/IShoppingMallSellerUser";

@Controller("/auth/sellerUser/password/reset/request")
export class AuthSelleruserPasswordResetRequestController {
  /**
   * Initiate password reset request for seller user accounts.
   *
   * This API operation initiates a password reset process for seller users who
   * have forgotten their password.
   *
   * It accepts the user's registered email and triggers a verification and
   * recovery email containing a secure token or link.
   *
   * This process adheres to security best practices ensuring that no sensitive
   * information is disclosed.
   *
   * The operation relates to password change and password reset confirmation
   * APIs forming a secure password recovery workflow.
   *
   * @param connection
   * @param body Seller user password reset request, including registered email
   *   address, following IShoppingMallSellerUser.IResetPasswordRequest
   *   structure.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async requestPasswordReset(
    @SelleruserAuth()
    sellerUser: SelleruserPayload,
    @TypedBody()
    body: IShoppingMallSellerUser.IResetPasswordRequest,
  ): Promise<void> {
    try {
      return await post__auth_sellerUser_password_reset_request({
        sellerUser,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
