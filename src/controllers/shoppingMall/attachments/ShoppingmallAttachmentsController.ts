import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { get__shoppingMall_attachments_$id } from "../../../providers/get__shoppingMall_attachments_$id";

import { IShoppingMallAttachments } from "../../../api/structures/IShoppingMallAttachments";

@Controller("/shoppingMall/attachments/:id")
export class ShoppingmallAttachmentsController {
  /**
   * Retrieve an attachment's metadata by ID.
   *
   * Retrieve detailed metadata of an attachment file specified by its UUID.
   * This includes file name, URL pointing to storage/CDN, media type (e.g.,
   * image/png), file size in bytes, optional upload IP address, and
   * created/updated timestamps.
   *
   * This is a safe, read-only operation used to fetch attachment details for
   * presentation or management.
   *
   * If the specified ID does not exist, a 404 error response will be returned.
   *
   * Authorization roles are not required or handled externally.
   *
   * The 'id' parameter must be a valid UUID in string format.
   *
   * @param connection
   * @param id UUID of the attachment to retrieve
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<IShoppingMallAttachments> {
    try {
      return await get__shoppingMall_attachments_$id({
        id,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
