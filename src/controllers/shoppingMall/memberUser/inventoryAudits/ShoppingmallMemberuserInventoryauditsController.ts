import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { patch__shoppingMall_memberUser_inventoryAudits } from "../../../../providers/patch__shoppingMall_memberUser_inventoryAudits";
import { MemberuserAuth } from "../../../../decorators/MemberuserAuth";
import { MemberuserPayload } from "../../../../decorators/payload/MemberuserPayload";
import { get__shoppingMall_memberUser_inventoryAudits_$id } from "../../../../providers/get__shoppingMall_memberUser_inventoryAudits_$id";

import { IPageIShoppingMallInventoryAudit } from "../../../../api/structures/IPageIShoppingMallInventoryAudit";
import { IShoppingMallInventoryAudit } from "../../../../api/structures/IShoppingMallInventoryAudit";

@Controller("/shoppingMall/memberUser/inventoryAudits")
export class ShoppingmallMemberuserInventoryauditsController {
  /**
   * Search and retrieve inventory audit records.
   *
   * Retrieve paginated inventory audit records capturing stock adjustments and
   * actor details. These logs enable audit and compliance with stock
   * management.
   *
   * Filters support inventory item, change type, actor user IDs, and date
   * ranges.
   *
   * Only authenticated member users can access this information.
   *
   * Modification or creation via API is disallowed as these logs are
   * system-generated.
   *
   * @param connection
   * @param body Search criteria and pagination parameters for inventory audit
   *   filtering
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async indexInventoryAudits(
    @MemberuserAuth()
    memberUser: MemberuserPayload,
    @TypedBody()
    body: IShoppingMallInventoryAudit.IRequest,
  ): Promise<IPageIShoppingMallInventoryAudit> {
    try {
      return await patch__shoppingMall_memberUser_inventoryAudits({
        memberUser,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Retrieve an inventory audit record by ID.
   *
   * Retrieve a single inventory audit record by its unique identifier. Includes
   * stock change information, actor user, and audit timestamps.
   *
   * Access restricted to authenticated member users only.
   *
   * Errors are returned if the ID is invalid or not found.
   *
   * @param connection
   * @param id Unique identifier of the inventory audit record
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":id")
  public async atInventoryAudit(
    @MemberuserAuth()
    memberUser: MemberuserPayload,
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<IShoppingMallInventoryAudit> {
    try {
      return await get__shoppingMall_memberUser_inventoryAudits_$id({
        memberUser,
        id,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
