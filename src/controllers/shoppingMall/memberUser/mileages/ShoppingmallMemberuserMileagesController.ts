import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { patch__shoppingMall_memberUser_mileages } from "../../../../providers/patch__shoppingMall_memberUser_mileages";
import { MemberuserAuth } from "../../../../decorators/MemberuserAuth";
import { MemberuserPayload } from "../../../../decorators/payload/MemberuserPayload";

import { IPageIShoppingMallMileage } from "../../../../api/structures/IPageIShoppingMallMileage";
import { IShoppingMallMileage } from "../../../../api/structures/IShoppingMallMileage";

@Controller("/shoppingMall/memberUser/mileages")
export class ShoppingmallMemberuserMileagesController {
  /**
   * Search and retrieve paginated mileage records.
   *
   * Retrieve a filtered and paginated list of mileage records.
   *
   * Supports search criteria and pagination to display user mileage points
   * history.
   *
   * Only authorized users can perform this operation.
   *
   * The operation returns a page container with mileage entity data matching
   * the filter criteria.
   *
   * @param connection
   * @param body Search criteria and pagination parameters for mileage records
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async searchMileages(
    @MemberuserAuth()
    memberUser: MemberuserPayload,
    @TypedBody()
    body: IShoppingMallMileage.IRequest,
  ): Promise<IPageIShoppingMallMileage> {
    try {
      return await patch__shoppingMall_memberUser_mileages({
        memberUser,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
