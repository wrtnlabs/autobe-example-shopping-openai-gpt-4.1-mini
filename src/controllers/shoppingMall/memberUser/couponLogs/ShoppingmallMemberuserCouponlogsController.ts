import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { patch__shoppingMall_memberUser_couponLogs } from "../../../../providers/patch__shoppingMall_memberUser_couponLogs";
import { MemberuserAuth } from "../../../../decorators/MemberuserAuth";
import { MemberuserPayload } from "../../../../decorators/payload/MemberuserPayload";

import { IPageIShoppingMallCouponLog } from "../../../../api/structures/IPageIShoppingMallCouponLog";
import { IShoppingMallCouponLog } from "../../../../api/structures/IShoppingMallCouponLog";

@Controller("/shoppingMall/memberUser/couponLogs")
export class ShoppingmallMemberuserCouponlogsController {
  /**
   * Search and retrieve coupon log records.
   *
   * Search and retrieve coupon log entries for tracking coupon usage and
   * lifecycle events.
   *
   * Supports filtering by coupon ticket, customer user ID, log types, and time
   * ranges.
   *
   * Accessible only to authenticated member users for compliance and audit.
   *
   * No write or update operations supported.
   *
   * Errors occur if filter criteria are invalid or no matching logs are found.
   *
   * @param connection
   * @param body Search criteria and pagination parameters for coupon log
   *   filtering
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async indexCouponLogs(
    @MemberuserAuth()
    memberUser: MemberuserPayload,
    @TypedBody()
    body: IShoppingMallCouponLog.IRequest,
  ): Promise<IPageIShoppingMallCouponLog> {
    try {
      return await patch__shoppingMall_memberUser_couponLogs({
        memberUser,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
