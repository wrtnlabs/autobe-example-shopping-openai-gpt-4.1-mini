import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { patch__shoppingMall_memberUser_orderAuditLogs } from "../../../../providers/patch__shoppingMall_memberUser_orderAuditLogs";
import { MemberuserAuth } from "../../../../decorators/MemberuserAuth";
import { MemberuserPayload } from "../../../../decorators/payload/MemberuserPayload";
import { get__shoppingMall_memberUser_orderAuditLogs_$id } from "../../../../providers/get__shoppingMall_memberUser_orderAuditLogs_$id";

import { IPageIShoppingMallOrderAuditLog } from "../../../../api/structures/IPageIShoppingMallOrderAuditLog";
import { IShoppingMallOrderAuditLog } from "../../../../api/structures/IShoppingMallOrderAuditLog";

@Controller("/shoppingMall/memberUser/orderAuditLogs")
export class ShoppingmallMemberuserOrderauditlogsController {
  /**
   * Search and retrieve order audit log records.
   *
   * Retrieve paged order audit logs detailing actions taken on orders. This
   * provides traceability of user or system events impacting orders.
   *
   * Search and filtering by order ID, user, action type, and time ranges are
   * supported.
   *
   * Authenticated member users have access. Creation or modification of audit
   * logs via APIs is not allowed as they are system-generated.
   *
   * Error responses occur if filters are invalid or no records match.
   *
   * @param connection
   * @param body Search criteria and pagination parameters for order audit log
   *   filtering
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async indexOrderAuditLogs(
    @MemberuserAuth()
    memberUser: MemberuserPayload,
    @TypedBody()
    body: IShoppingMallOrderAuditLog.IRequest,
  ): Promise<IPageIShoppingMallOrderAuditLog> {
    try {
      return await patch__shoppingMall_memberUser_orderAuditLogs({
        memberUser,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Retrieve an order audit log by ID.
   *
   * Get detailed information of an order audit log entry by its identifier. The
   * log includes order reference, actor user ID, action description, JSON
   * details, and timestamps for traceability purposes.
   *
   * Only authenticated member users can access this data.
   *
   * Returns 404 if the log ID is invalid or not found.
   *
   * @param connection
   * @param id Unique identifier of the order audit log entry
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":id")
  public async atOrderAuditLog(
    @MemberuserAuth()
    memberUser: MemberuserPayload,
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<IShoppingMallOrderAuditLog> {
    try {
      return await get__shoppingMall_memberUser_orderAuditLogs_$id({
        memberUser,
        id,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
