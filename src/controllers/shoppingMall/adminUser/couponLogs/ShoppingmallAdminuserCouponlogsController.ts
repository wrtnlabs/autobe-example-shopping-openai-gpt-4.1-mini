import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { get__shoppingMall_adminUser_couponLogs_$id } from "../../../../providers/get__shoppingMall_adminUser_couponLogs_$id";
import { AdminuserAuth } from "../../../../decorators/AdminuserAuth";
import { AdminuserPayload } from "../../../../decorators/payload/AdminuserPayload";

import { IShoppingMallCouponLog } from "../../../../api/structures/IShoppingMallCouponLog";

@Controller("/shoppingMall/adminUser/couponLogs/:id")
export class ShoppingmallAdminuserCouponlogsController {
  /**
   * Retrieve coupon log details by unique ID.
   *
   * Retrieve detailed coupon log information by specifying the unique coupon
   * log ID. This operation fetches all recorded activities related to coupon
   * tickets, including issuance, usage, and expirations.
   *
   * Access to coupon logs is restricted for security and compliance purposes.
   * Roles such as adminUser have the necessary permissions to query these
   * logs.
   *
   * The response includes comprehensive audit data tied to coupon tickets, with
   * user references where applicable. Errors return not found if the ID is
   * invalid or does not exist.
   *
   * @param connection
   * @param id Unique identifier of the coupon log
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @AdminuserAuth()
    adminUser: AdminuserPayload,
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<IShoppingMallCouponLog> {
    try {
      return await get__shoppingMall_adminUser_couponLogs_$id({
        adminUser,
        id,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
