import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { patch__shoppingMall_adminUser_attachments } from "../../../../providers/patch__shoppingMall_adminUser_attachments";
import { AdminuserAuth } from "../../../../decorators/AdminuserAuth";
import { AdminuserPayload } from "../../../../decorators/payload/AdminuserPayload";

import { IPageIShoppingMallAttachment } from "../../../../api/structures/IPageIShoppingMallAttachment";
import { IShoppingMallAttachment } from "../../../../api/structures/IShoppingMallAttachment";

@Controller("/shoppingMall/adminUser/attachments")
export class ShoppingmallAdminuserAttachmentsController {
  /**
   * Search and retrieve shopping mall attachment files.
   *
   * Provides advanced search capabilities for managing attachment files
   * uploaded to the shopping mall backend. This includes filtering by media
   * type, created date, and other relevant metadata.
   *
   * The attachments are browsable in pagination format for efficient data
   * retrieval.
   *
   * Access control restricts the endpoint to administrative users who manage
   * CDN-resident files and metadata.
   *
   * Errors include invalid filters or access denial.
   *
   * Returned data includes file URLs, types, sizes, and timestamps.
   *
   * @param connection
   * @param body Search parameters and pagination options for attachments
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async indexAttachment(
    @AdminuserAuth()
    adminUser: AdminuserPayload,
    @TypedBody()
    body: IShoppingMallAttachment.IRequest,
  ): Promise<IPageIShoppingMallAttachment> {
    try {
      return await patch__shoppingMall_adminUser_attachments({
        adminUser,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
