import { tags } from "typia";

/**
 * Mileage donations made by administrators to customers as promotional campaign
 * bonuses or compensation. Records reason, amount, and donation metadata for
 * audit and reporting.
 *
 * @author AutoBE - https://github.com/wrtnlabs/autobe
 * @namespace Coupons
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallMileageDonation = {
  /** Primary Key. */
  id: string;

  /** Admin user donor {@link shopping_mall_adminusers.id}. */
  adminuser_id: string;

  /** Member user beneficiary {@link shopping_mall_memberusers.id}. */
  memberuser_id: string;

  /**
   * Reason for the mileage donation.
   *
   * Provides context or justification for the donation, useful for reporting
   * and auditing.
   */
  donation_reason: string;

  /**
   * Amount of mileage donated.
   *
   * Represents the quantity of mileage points given to the member user.
   *
   * Must be a positive floating-point number.
   */
  donation_amount: number;

  /**
   * Date and time of the donation.
   *
   * Use the ISO 8601 date-time format with timezone.
   */
  donation_date: string & tags.Format<"date-time">;

  /**
   * Record creation timestamp.
   *
   * Automatically generated by the system.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Automatically updated by the system when record changes.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallMileageDonation {
  /**
   * Request parameters to filter, search, and paginate mileage donation
   * records.
   *
   * Supports complex queries for administrative audit and reporting.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Coupons
   */
  export type IRequest = {
    /** Pagination page number. Default is 1. */
    page?: number | null | undefined;

    /** Pagination limit per page. Default is 100. */
    limit?: number | null | undefined;

    /** Filter by admin user ID who donated the mileage points. */
    adminuser_id?: string | null | undefined;

    /** Filter by member user ID receiving the donation. */
    memberuser_id?: string | null | undefined;

    /** Filter donation reason with substring matching. */
    donation_reason?: string | null | undefined;

    /** Filter donations by minimum donation amount. */
    min_donation_amount?: number | null | undefined;

    /** Filter donations by maximum donation amount. */
    max_donation_amount?: number | null | undefined;

    /** Filter donations by start date (ISO 8601 format). */
    donation_date_start?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;

    /** Filter donations by end date (ISO 8601 format). */
    donation_date_end?: (string & tags.Format<"date-time">) | null | undefined;

    /** Sort field name, e.g., "donation_date", "donation_amount". */
    sort_by?: string | null | undefined;

    /** Sort direction: "asc" for ascending, "desc" for descending. */
    sort_direction?: "asc" | "desc" | null | undefined;
  };

  /**
   * Request body for creating a new mileage donation record.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Coupons
   */
  export type ICreate = {
    /** Admin user donor ID. */
    adminuser_id: string;

    /** Member user beneficiary ID. */
    memberuser_id: string;

    /** Reason for the mileage donation. */
    donation_reason: string;

    /** Amount of mileage to donate; must be positive float. */
    donation_amount: number;

    /** Date and time of the donation (ISO 8601 format). */
    donation_date: string & tags.Format<"date-time">;
  };

  /**
   * Request body for updating an existing mileage donation record.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Coupons
   */
  export type IUpdate = {
    /** Admin user donor ID. */
    adminuser_id?: string | undefined;

    /** Member user beneficiary ID. */
    memberuser_id?: string | undefined;

    /** Reason for the mileage donation. */
    donation_reason?: string | undefined;

    /** Amount of mileage to donate; must be positive float. */
    donation_amount?: number | undefined;

    /** Date and time of the donation (ISO 8601 format). */
    donation_date?: (string & tags.Format<"date-time">) | undefined;
  };
}
