import { tags } from "typia";

/**
 * Tracks suspicious activities detected by AI fraud detection systems within
 * the shopping mall platform.
 *
 * Enables auditing and investigation of potential security incidents to enhance
 * platform trust and user safety.
 *
 * Records include customer and order references, detection types, confidence
 * levels, resolutions, and timestamps.
 *
 * @author AutoBE
 * @namespace AdvancedFeatures
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallFraudDetection = {
  /**
   * Primary Key.
   *
   * Unique identifier for the fraud detection record.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the member customer associated with the fraud detection
   * event.
   */
  user_id: string & tags.Format<"uuid">;

  /** Related order suspected of fraud, nullable if not order-specific. */
  order_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Type/category of fraud detection (e.g., 'payment_fraud',
   * 'account_takeover').
   */
  detection_type: string;

  /** Confidence score of AI detection between 0.0 and 1.0. */
  confidence_score: number;

  /**
   * Resolution status of the fraud case ('pending', 'investigating',
   * 'resolved', 'dismissed').
   */
  resolution_status: string;

  /** Detailed description or notes about the fraud detection event. */
  details?: string | null | undefined;

  /** Timestamp when the fraud detection occurred. */
  detected_at: string & tags.Format<"date-time">;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last record update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null if record is active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallFraudDetection {
  /**
   * Creation request payload for new fraud detection record.
   *
   * Contains necessary information about the detected suspicious activity,
   * related order, and detection outcomes.
   *
   * @author AutoBE
   * @namespace AdvancedFeatures
   */
  export type ICreate = {
    /**
     * Reference to the member customer associated with the fraud detection
     * event.
     */
    user_id: string & tags.Format<"uuid">;

    /** Related order suspected of fraud, nullable if not order-specific. */
    order_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Type/category of fraud detection (e.g., 'payment_fraud',
     * 'account_takeover').
     */
    detection_type: string;

    /** Confidence score of AI detection between 0.0 and 1.0. */
    confidence_score: number;

    /**
     * Resolution status of the fraud case ('pending', 'investigating',
     * 'resolved', 'dismissed').
     */
    resolution_status: string;

    /** Detailed description or notes about the fraud detection event. */
    details?: string | null | undefined;

    /** Timestamp when the fraud detection occurred. */
    detected_at: string & tags.Format<"date-time">;
  };

  /**
   * Update request payload for fraud detection record.
   *
   * Allows partial modifications to detection details and resolution status.
   *
   * @author AutoBE
   * @namespace AdvancedFeatures
   */
  export type IUpdate = {
    /**
     * Type/category of fraud detection (e.g., 'payment_fraud',
     * 'account_takeover').
     */
    recommendation_type?: string | undefined;

    /**
     * Version identifier of the AI algorithm that generated this
     * recommendation.
     */
    algorithm_version?: string | undefined;

    /**
     * Type/category of fraud detection (e.g., 'payment_fraud',
     * 'account_takeover').
     */
    detection_type?: string | undefined;

    /** Confidence score of AI detection between 0.0 and 1.0. */
    confidence_score?: number | undefined;

    /**
     * Resolution status of the fraud case ('pending', 'investigating',
     * 'resolved', 'dismissed').
     */
    resolution_status?: string | undefined;

    /** Detailed description or notes about the fraud detection event. */
    details?: string | null | undefined;

    /** Timestamp when the fraud detection occurred. */
    detected_at?: (string & tags.Format<"date-time">) | undefined;

    /** Soft deletion timestamp; null if record is active. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Request parameters for searching fraud detection records with pagination
   * and filters to refine the results.
   *
   * Supports filtering by user, order, detection type, resolution status, and
   * date ranges of detection.
   *
   * @author AutoBE
   * @namespace AdvancedFeatures
   */
  export type IRequest = {
    /** Page number for pagination. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Number of records per page for pagination. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Filter by user ID associated with fraud detection. */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by associated order ID. */
    order_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by detection type category. */
    detection_type?: string | null | undefined;

    /** Filter by resolution status. */
    resolution_status?: string | null | undefined;

    /** Filter detections from this date onward. */
    detected_start?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter detections up to this date. */
    detected_end?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information of fraud detection records for quick review.
   *
   * Includes essential detection metadata for monitoring and triage.
   */
  export type ISummary = {
    /** Unique identifier of the fraud detection record. */
    id: string & tags.Format<"uuid">;

    /** Reference ID of the member user flagged by fraud detection. */
    user_id: string & tags.Format<"uuid">;

    /**
     * Type/category of fraud detected, e.g., payment fraud, account
     * takeover.
     */
    detection_type: string;

    /** Confidence score of the AI fraud detection, between 0.0 and 1.0. */
    confidence_score: number;

    /**
     * Current resolution status of the fraud detection case, e.g., pending,
     * resolved.
     */
    resolution_status: string;

    /** Timestamp when the fraud detection occurred. */
    detected_at: string & tags.Format<"date-time">;
  };
}
