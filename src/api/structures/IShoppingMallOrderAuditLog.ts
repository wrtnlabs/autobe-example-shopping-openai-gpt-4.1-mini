import { tags } from "typia";

/**
 * Captures detailed audit trails for order-related events, recording actions
 * performed by users or system processes for traceability and accountability.
 *
 * @author AutoBE - https://github.com/wrtnlabs/autobe
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallOrderAuditLog = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Referenced order ID. {@link shopping_mall_orders.id} */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /**
   * UUID of the user who performed the action, if applicable.
   * {@link shopping_mall_memberusers.id}, {@link shopping_mall_sellerusers.id},
   * or {@link shopping_mall_adminusers.id}
   */
  actor_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Description of the action performed on the order. */
  action: string;

  /** Additional JSON or text details about the action. */
  action_details?: string | null | undefined;

  /** Timestamp when the action was performed. */
  performed_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallOrderAuditLog {
  /**
   * Captures detailed audit trails for order-related events, recording
   * actions performed by users or system processes for traceability and
   * accountability.
   */
  export type IRequest = {
    /** Page number. */
    page?: number | null | undefined;

    /** Limitation of records per a page. */
    limit?: number | null | undefined;

    /** Filter order audit logs by order ID. */
    shopping_mall_order_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter order audit logs by the user who performed the action. */
    actor_user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter audit logs by action description. */
    action?: string | null | undefined;

    /** Filter audit logs performed after the specified date. */
    performed_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter audit logs performed before the specified date. */
    performed_at_to?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
