import { tags } from "typia";

/**
 * Represents a product for sale in the shopping mall system, tied to a sales
 * channel, section, and seller user. Contains lifecycle and price information,
 * and supports soft deletion.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallSale = {
  /** Unique identifier for the sale product. */
  id: string & tags.Format<"uuid">;

  /** Identifier of the sales channel this product belongs to. */
  shopping_mall_channel_id: string & tags.Format<"uuid">;

  /** Identifier of the sales section this product belongs to, or null if none. */
  shopping_mall_section_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Identifier of the seller user who owns the product. */
  shopping_mall_seller_user_id: string & tags.Format<"uuid">;

  /** Unique code representing the product for business identification. */
  code: string;

  /**
   * Current lifecycle status of the product such as active, paused, or
   * discontinued.
   */
  status: string;

  /** Product name or title. */
  name: string;

  /** Detailed description of the product, optional. */
  description?: string | null | undefined;

  /** Base price of the product. */
  price: number;

  /** Timestamp when the product record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the product record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the product was soft deleted, or null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallSale {
  /**
   * Request payload for searching shopping mall sales with pagination,
   * filtering, and sorting.
   */
  export type IRequest = {
    /** Page number for pagination, must be a positive integer. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Maximum number of records per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Sorting criteria expressed as a string. */
    sort?: string | null | undefined;

    /** Text search filter for product name or code. */
    search?: string | null | undefined;

    /** Status filter such as active, paused, or discontinued. */
    status?: string | null | undefined;

    /** Filter by channel ID. */
    channel_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by seller user ID. */
    seller_user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by section ID. */
    section_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /**
   * Creation payload for a new shopping mall sale product with required
   * channel, seller, code, status, name, and price fields.
   */
  export type ICreate = {
    /** Identifier of the sales channel this new product belongs to. */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /**
     * Identifier of the sales section this new product belongs to, or null
     * if none.
     */
    shopping_mall_section_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Identifier of the seller user who owns the new product. */
    shopping_mall_seller_user_id: string & tags.Format<"uuid">;

    /** Unique code representing the new product for business identification. */
    code: string;

    /** Initial lifecycle status of the new product such as active. */
    status: string;

    /** Name or title of the new product. */
    name: string;

    /** Detailed description of the new product. */
    description?: string | null | undefined;

    /** Base price of the new product. */
    price: number;
  };

  /**
   * Update payload for modifying fields of a shopping mall sale product. All
   * fields are optional except for ID, which is path parameter.
   */
  export type IUpdate = {
    /** Identifier of the sales channel to update. */
    shopping_mall_channel_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Identifier of the sales section to update, or null if none. */
    shopping_mall_section_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Identifier of the seller user to update. */
    shopping_mall_seller_user_id?: (string & tags.Format<"uuid">) | undefined;

    /** Updated code for the product. */
    code?: string | undefined;

    /** Updated lifecycle status of the product. */
    status?: string | undefined;

    /** Updated product name or title. */
    name?: string | undefined;

    /** Updated detailed description of the product. */
    description?: string | null | undefined;

    /** Updated base price of the product. */
    price?: number | undefined;
  };

  /**
   * Summary information for a sale product in the shopping mall.
   *
   * This schema includes essential identifiers, pricing, status, and basic
   * audit timestamps to support list and overview operations.
   */
  export type ISummary = {
    /** Unique identifier of the sale product. */
    id: string & tags.Format<"uuid">;

    /** Channel ID this sale belongs to. */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /** Section ID this sale belongs to. */
    shopping_mall_section_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Seller user ID who owns the sale product. */
    shopping_mall_seller_user_id: string & tags.Format<"uuid">;

    /** Unique product code. */
    code: string;

    /** Current product status. */
    status: string;

    /** Sale product's name. */
    name: string;

    /** Base price of the product. */
    price: number;

    /** Timestamp when created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when updated. */
    updated_at: string & tags.Format<"date-time">;
  };
}
