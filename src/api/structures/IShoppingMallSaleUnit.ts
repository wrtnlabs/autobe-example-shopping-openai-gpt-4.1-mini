import { tags } from "typia";

/**
 * Entity representing units or components within a sale product.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallSaleUnit = {
  /** Primary key UUID of the sale unit. */
  id: string & tags.Format<"uuid">;

  /** Foreign key to the sale product. */
  shopping_mall_sale_id: string & tags.Format<"uuid">;

  /** Unique code identifying the sale unit under the product. */
  code: string;

  /** Name/title of the sale unit. */
  name: string;

  /** Optional description of the sale unit. */
  description?: string | null | undefined;

  /** Timestamp when created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp of soft deletion or null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallSaleUnit {
  /** Request parameters for listing sales units with pagination and filtering. */
  export type IRequest = {
    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Maximum number of items per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Search keyword for filtering units. */
    search?: string | null | undefined;

    /** Property to sort by. */
    sortBy?: string | null | undefined;

    /** Sort order direction. */
    order?: "asc" | "desc" | null | undefined;

    /** UUID of the sale product to retrieve units for. */
    saleId: string & tags.Format<"uuid">;
  };

  /** Payload for creating a new sale unit entity. */
  export type ICreate = {
    /** Foreign key UUID to sale product. */
    shopping_mall_sale_id: string & tags.Format<"uuid">;

    /** Unique unit code under the sale product. */
    code: string;

    /** Name of the sale unit. */
    name: string;

    /** Optional sale unit description. */
    description?: string | null | undefined;
  };

  /**
   * Partial type to update a sale unit entity. Properties are optional to
   * allow patch-style updates. All string IDs are UUID format strings.
   */
  export type IUpdate = {
    /** Belonged product sale ID (UUID) */
    shopping_mall_sale_id?: (string & tags.Format<"uuid">) | undefined;

    /** Unit code used for identification under the product. */
    code?: string | undefined;

    /** Unit name/title. */
    name?: string | undefined;

    /** Detailed description of the unit. */
    description?: string | null | undefined;
  };

  /**
   * Summary information about a sale unit which is a component of a sale
   * product.
   *
   * Includes identifiers, descriptive information, and audit timestamps
   * supporting inventory and product composition management.
   */
  export type ISummary = {
    /** Unique identifier of the sale unit. */
    id: string & tags.Format<"uuid">;

    /** Sale product ID this unit belongs to. */
    shopping_mall_sale_id: string & tags.Format<"uuid">;

    /** Unit code within the sale product. */
    code: string;

    /** Unit name. */
    name: string;

    /** Optional description of the unit. */
    description?: string | null | undefined;

    /** Creation timestamp of this unit. */
    created_at: string & tags.Format<"date-time">;

    /** Last update timestamp of this unit. */
    updated_at: string & tags.Format<"date-time">;
  };
}
