import { tags } from "typia";

/**
 * Entity representing the mapping between a sales channel and a product
 * category.
 *
 * This facilitates the channel-specific product categorization structure
 * enabling custom category assignments per channel.
 *
 * Includes timestamps and soft deletion support.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallChannelCategory = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Belonged sales channel's ID. */
  shopping_mall_channel_id: string & tags.Format<"uuid">;

  /** Belonged product category's ID. */
  shopping_mall_category_id: string & tags.Format<"uuid">;

  /** Timestamp when the channel-category mapping was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the channel-category mapping was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the mapping was logically deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** The sales channel associated with this channel-category mapping. */
  channel?: IShoppingMallChannelCategory.IChannel | undefined;

  /** The product category associated with this channel-category mapping. */
  category?: IShoppingMallChannelCategory.ICategory | undefined;
};
export namespace IShoppingMallChannelCategory {
  /**
   * Request parameters for filtering, sorting, and pagination of
   * channel-category mappings.
   *
   * Supports ID filters, search queries, soft deletion flags, and pagination.
   */
  export type IRequest = {
    /** Belonged sales channel's ID (UUID). */
    shopping_mall_channel_id?: string | undefined;

    /** Belonged product category's ID (UUID). */
    shopping_mall_category_id?: string | undefined;

    /**
     * Filter for soft deleted entities. If true, return soft deleted only,
     * if false return non deleted only.
     */
    deleted_at?: boolean | undefined;

    /** Text search query for filtering by channel or category name. */
    search?: string | undefined;

    /** Current page number for pagination. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Maximum number of records per page. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Request body for creating a new channel-category mapping.
   *
   * Includes sales channel and product category IDs.
   *
   * Used to associate categories to channels for multi-channel category
   * management.
   */
  export type ICreate = {
    /** Belonged sales channel's ID. */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /** Belonged product category's ID. */
    shopping_mall_category_id: string & tags.Format<"uuid">;
  };

  /**
   * Request body for updating a channel-category mapping.
   *
   * Allows updating the linked sales channel or product category.
   *
   * Supports partial or full update requests.
   */
  export type IUpdate = {
    /** Belonged sales channel's ID. */
    shopping_mall_channel_id?: (string & tags.Format<"uuid">) | undefined;

    /** Belonged product category's ID. */
    shopping_mall_category_id?: (string & tags.Format<"uuid">) | undefined;
  };

  /** Summary information of a shopping mall channel-category mapping. */
  export type ISummary = {
    /** Unique identifier */
    id: string & tags.Format<"uuid">;

    /** Belonged sales channel's identifier. */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /** Belonged product category's identifier. */
    shopping_mall_category_id: string & tags.Format<"uuid">;
  };

  /**
   * Represents sales channels through which products are sold, such as
   * websites, mobile apps, or physical kiosks. Channels organize sales under
   * distinct business contexts and are configured separately to enable
   * multi-channel commerce.
   */
  export type IChannel = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /**
     * Unique code identifying the channel. Used in URL paths and API
     * endpoints.
     *
     * Business rule: Must be unique across all channels.
     */
    code: string;

    /** Human-readable name of the sales channel. */
    name: string;

    /**
     * Detailed description of the channel's purpose and characteristics.
     *
     * Optional field.
     */
    description?: string | null | undefined;

    /**
     * Status of the channel, e.g., active, inactive, pending.
     *
     * Note: This field can take values like "active", "inactive"; to be
     * validated in business logic.
     */
    status: string;

    /**
     * Timestamp when the channel was created.
     *
     * ISO 8601 date-time string expected.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the channel was last updated.
     *
     * ISO 8601 date-time string expected.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the channel was logically deleted (soft delete).
     *
     * Optional field. ISO 8601 date-time string expected.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Product category record in the shopping mall with hierarchical support
   * and multi-channel configuration.
   */
  export type ICategory = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /** Unique category code. */
    code: string;

    /** Category name. */
    name: string;

    /** Category status such as active or inactive. */
    status: string;

    /** Optional category description. */
    description?: string | null | undefined;

    /** Creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Last update timestamp. */
    updated_at: string & tags.Format<"date-time">;

    /** Logical deletion timestamp. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
