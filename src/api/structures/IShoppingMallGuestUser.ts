import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Represents a guest user session in the shopping mall system.
 *
 * Tracks network, session, browser, and lifecycle metadata for unauthenticated
 * users.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallGuestUser = {
  /**
   * Primary identifier for the shopping mall guest user session.
   *
   * This is an UUID string uniquely identifying this guest user record.
   */
  id: string & tags.Format<"uuid">;

  /**
   * IP address from which the guest user connected.
   *
   * It records the network address of the guest session.
   */
  ip_address: string;

  /**
   * URL accessed by the guest user at session start.
   *
   * This is a very long string up to 80000 characters (URL length).
   */
  access_url: string;

  /**
   * HTTP referrer URL if any.
   *
   * Optional, can be null if no referrer.
   */
  referrer?: string | null | undefined;

  /**
   * User-Agent string of the guest browser.
   *
   * Optional, can be null.
   */
  user_agent?: string | null | undefined;

  /**
   * Session start timestamp (ISO 8601 format).
   *
   * Records when guest session was initiated.
   */
  session_start_at: string & tags.Format<"date-time">;

  /**
   * Session end timestamp (ISO 8601 format), nullable.
   *
   * Tracks when the guest session ended or expired.
   */
  session_end_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Record creation timestamp.
   *
   * When the guest session record was created.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * When the guest session record was last updated.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Logical deletion timestamp.
   *
   * Represents soft delete field, null if active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallGuestUser {
  /**
   * Request payload for creating a new guest user session.
   *
   * The system generates session specific information.
   *
   * Client may provide IP address, access URL, referrer and user agent.
   */
  export type IJoin = {
    /**
     * IP address from which the guest is connecting.
     *
     * Required as string.
     */
    ip_address: string;

    /**
     * Access URL the guest used to arrive at the mall.
     *
     * Required string, very long format.
     */
    access_url: string;

    /**
     * HTTP referrer URL.
     *
     * Optional and nullable.
     */
    referrer?: string | null | undefined;

    /**
     * User-Agent string of the guest browser.
     *
     * Optional and nullable.
     */
    user_agent?: string | null | undefined;
  };

  /**
   * Authorization response for guest user after join or token refresh.
   *
   * Includes unique ID and JWT token data.
   */
  export type IAuthorized = {
    /**
     * Unique identifier of the authenticated guest user session.
     *
     * UUID string.
     */
    id: string & tags.Format<"uuid">;

    /**
     * IP address from which the guest user connected.
     *
     * It records the network address of the guest session.
     */
    ip_address: string;

    /**
     * URL accessed by the guest user at session start.
     *
     * This is a very long string up to 80000 characters (URL length).
     */
    access_url: string;

    /**
     * HTTP referrer URL if any.
     *
     * Optional, can be null if no referrer.
     */
    referrer?: string | null | undefined;

    /**
     * User-Agent string of the guest browser.
     *
     * Optional, can be null.
     */
    user_agent?: string | null | undefined;

    /**
     * Session start timestamp (ISO 8601 format).
     *
     * Records when guest session was initiated.
     */
    session_start_at: string & tags.Format<"date-time">;

    /**
     * Session end timestamp (ISO 8601 format), nullable.
     *
     * Tracks when the guest session ended or expired.
     */
    session_end_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Record creation timestamp.
     *
     * When the guest session record was created.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Record last update timestamp.
     *
     * When the guest session record was last updated.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Logical deletion timestamp.
     *
     * Represents soft delete field, null if active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Request payload to refresh guest user access tokens.
   *
   * Contains a refresh token string.
   */
  export type IRefresh = {
    /** JWT refresh token string used to obtain new access tokens. */
    refresh_token: string;
  };
}
