import { tags } from "typia";

/**
 * Payment applied for orders within the shopping mall system. This entity
 * tracks payment status, associated order, payment method, amount, transaction
 * details, and timestamps. Supports payment cancellation and asynchronous
 * confirmation.
 *
 * @author AutoBE - https://github.com/wrtnlabs/autobe
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallPayment = {
  /** Unique identifier of the payment. Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Order ID this payment applies to. */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /** Payment method used (e.g., 'credit_card', 'bank_transfer'). */
  payment_method: string;

  /**
   * Payment status, e.g., 'pending', 'confirmed', 'cancelled', 'failed'.
   *
   * This property is a string but restricted by business logic.
   */
  payment_status: string;

  /** The amount paid in this payment. */
  payment_amount: number;

  /** External transaction id, nullable if not applicable. */
  transaction_id?: string | null | undefined;

  /** Created timestamp in RFC3339 format. */
  created_at: string & tags.Format<"date-time">;

  /** Updated timestamp in RFC3339 format. */
  updated_at: string & tags.Format<"date-time">;

  /** Cancelled timestamp if cancelled, nullable. */
  cancelled_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallPayment {
  /**
   * Request parameters for filtering, sorting, and pagination of payment
   * applications.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Limitation of records per a page.
     *
     * @default 100
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Filter to select payment method (e.g., 'credit_card',
     * 'bank_transfer').
     */
    payment_method?: string | null | undefined;

    /** Filter to select payment status (e.g., 'pending', 'confirmed'). */
    payment_status?: string | null | undefined;

    /** Filter to include payments created from this datetime. */
    created_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter to include payments created until this datetime. */
    created_at_to?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Request schema for creating a new payment application. Server-managed
   * timestamps are excluded.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   */
  export type ICreate = {
    /** Order ID this payment applies to. */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /**
     * Payment method used (e.g., 'credit_card', 'bank_transfer').
     *
     * Must be one of the known valid payment methods.
     */
    payment_method: string;

    /** Payment status must be set to "pending" when creating a payment. */
    payment_status: string;

    /**
     * Payment amount.
     *
     * Must be positive.
     */
    payment_amount: number;

    /** External transaction ID if available. */
    transaction_id?: string | null | undefined;
  };

  /**
   * Request schema for updating an existing payment application. Timestamps
   * are managed by the server.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   */
  export type IUpdate = {
    /**
     * The ID of the order to which this payment applies.
     *
     * Optional for update but must be valid if provided.
     */
    shopping_mall_order_id?: (string & tags.Format<"uuid">) | undefined;

    /** Method of payment. */
    payment_method?: string | undefined;

    /**
     * Status of payment.
     *
     * Allowed values include 'pending', 'confirmed', 'cancelled', 'failed'.
     */
    payment_status?: string | undefined;

    /** Payment amount. Must be positive if provided. */
    payment_amount?: number | undefined;

    /** External transaction identifier. */
    transaction_id?: string | null | undefined;

    /** Cancelled timestamp. Nullable to indicate cancellation. */
    cancelled_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information of a payment application in the shopping mall
   * backend.
   *
   * This type provides key payment details excluding sensitive data for list
   * and summary views.
   *
   * It supports pagination and filtering use cases where detailed payment
   * data is not necessary.
   */
  export type ISummary = {
    /** Unique payment identifier. */
    id: string & tags.Format<"uuid">;

    /** Payment method name. */
    payment_method: string;

    /** Status of the payment. */
    payment_status: string;

    /** Amount of the payment. */
    payment_amount: number;

    /** Creation date. */
    created_at: string & tags.Format<"date-time">;
  };
}
