import { tags } from "typia";

/**
 * Storage for all attachment files such as images, documents, or multimedia
 * related to products, posts, and system resources. Supports metadata
 * management and secure CDN distribution.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAttachment = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Stored file name including extension. */
  file_name: string;

  /** Publicly accessible URL pointing to the file location, typically via CDN. */
  file_url: string & tags.Format<"uri">;

  /** MIME type of the file, e.g., image/png, application/pdf. */
  media_type: string;

  /** Size of the file in bytes. */
  file_size: number & tags.Type<"int32">;

  /** IP address from which the file was uploaded. */
  upload_ip?: string | null | undefined;

  /** Timestamp when the attachment was uploaded. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the attachment metadata was last modified. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the attachment was logically deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallAttachment {
  /** Request parameters for filtering, sorting, and pagination of attachments. */
  export type IRequest = {
    /** Page number for pagination query. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Maximum number of results per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Column name to sort the results by. */
    sortBy?: string | null | undefined;

    /** Sort direction (ascending or descending). */
    sortDirection?: "asc" | "desc" | null | undefined;

    /** Search keyword for filtering filenames or URLs. */
    search?: string | null | undefined;

    /** Filter by media type (e.g., image/jpeg). */
    media_type?: string | null | undefined;

    /** Minimum file size for filtering (bytes). */
    min_file_size?: (number & tags.Type<"int32">) | null | undefined;

    /** Maximum file size for filtering (bytes). */
    max_file_size?: (number & tags.Type<"int32">) | null | undefined;
  };
}
