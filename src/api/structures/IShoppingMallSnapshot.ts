import { tags } from "typia";

/**
 * Stores immutable historical snapshots of various shopping mall entities ///
 * to preserve the state at specific points in time for audit, rollback, and ///
 * compliance purposes.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallSnapshot = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /**
   * Specifies the type of the entity being snapshotted (such as 'order', ///
   * 'product').
   */
  entity_type: string;

  /**
   * References the unique identifier of the entity instance the snapshot ///
   * belongs to.
   */
  entity_id: string & tags.Format<"uuid">;

  /** JSON string containing the complete snapshot data of the entity state. */
  snapshot_data: string;

  /** The timestamp when this snapshot was created. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallSnapshot {
  /**
   * This operation retrieves a filtered and paginated list of entity
   * snapshots representing immutable historical records for audit, rollback,
   * and compliance.
   *
   * It operates on the shopping_mall_snapshots table. The request supports
   * complex search criteria and pagination to filter snapshots by entity
   * type, entity ID, and creation date.
   *
   * No modification operations are supported on snapshots as they are
   * system-generated audit data.
   */
  export type IRequest = {
    /** Page number. */
    page?: number | null | undefined;

    /** Limitation of records per a page. */
    limit?: number | null | undefined;

    /** Filter snapshots by entity type. */
    entity_type?: string | null | undefined;

    /** Filter snapshots by entity ID. */
    entity_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter snapshots created after this date. */
    created_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter snapshots created before this date. */
    created_at_to?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
