import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * System administrator user information with full access and elevated
 * privileges to manage the shopping mall backend platform. Includes
 * authentication credentials and status tracking.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAdminUser = {
  /** Unique identifier for the administrator user account. */
  id: string & tags.Format<"uuid">;

  /** Administrator's email address used for login and system communication. */
  email: string;

  /** Hashed password for secure authentication of the administrator. */
  password_hash: string;

  /** Display nickname used by the administrator. */
  nickname: string;

  /** Full legal name of the administrator user. */
  full_name: string;

  /**
   * Current operational status of the administrator account, such as active
   * or suspended.
   */
  status: string;

  /** Timestamp marking when the administrator user account was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp marking the last update to the administrator user account. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp indicating when the administrator user account was logically
   * deleted, if applicable.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallAdminUser {
  /** Payload for creating a new administrator user account. */
  export type ICreate = {
    /** Unique email of the admin user for login. */
    email: string & tags.Format<"email">;

    /** Hashed password for authentication. */
    password_hash: string;

    /** Display nickname for the administrator. */
    nickname: string;

    /** Full legal name of the administrator. */
    full_name: string;

    /** Current status of the administrator account (e.g., 'active'). */
    status: string;
  };

  /**
   * Authorization response containing JWT token.
   *
   * This response is returned after successful authentication operations such
   * as login, join, or token refresh for system administrator users.
   */
  export type IAuthorized = {
    /** Unique identifier of the authenticated administrator user */
    id: string & tags.Format<"uuid">;

    /** Administrator's unique email address for login. */
    email: string;

    /** Hashed password for secure authentication of the administrator. */
    password_hash: string;

    /** Display nickname for the administrator. */
    nickname: string;

    /** Full legal name of the administrator. */
    full_name: string;

    /** Current status of the administrator account. */
    status: string;

    /** Timestamp marking when the administrator user account was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp marking the last update to the administrator user account. */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Timestamp indicating when the administrator user account was
     * logically deleted, if applicable.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /** Administrator user login credentials containing email and password hash. */
  export type ILogin = {
    /** Administrator's unique email address for login. */
    email: string;

    /** Hashed password for administrator authentication. */
    password_hash: string;
  };

  /**
   * Request payload containing refresh token to renew administrator session
   * JWT tokens.
   */
  export type IRefresh = {
    /** Refresh token string for requesting new access token */
    token: string;
  };

  /** Parameters for requesting paginated administrator user lists. */
  export type IRequest = {
    /** Page number for pagination */
    page?: number | null | undefined;

    /** Record limit per page */
    limit?: number | null | undefined;

    /**
     * Search string to query administrator users by email, nickname, or
     * full name
     */
    search?: string | null | undefined;

    /** Account status filter, e.g., active or suspended. */
    status?: string | null | undefined;

    /** Sort order criteria string for administrative user listing. */
    sort?: string | null | undefined;
  };

  /**
   * Update payload for ShoppingMallAdminUser allowing modification of email,
   * password hash, nickname, full name, and status.
   */
  export type IUpdate = {
    /**
     * Unique email address for administrator login, must be a valid email
     * format.
     */
    email?: string | undefined;

    /** Hashed password for the administrator account. */
    password_hash?: string | undefined;

    /** Display nickname for the administrator user. */
    nickname?: string | undefined;

    /** Full real name of the administrator. */
    full_name?: string | undefined;

    /**
     * Current status of the administrator account, e.g., active or
     * suspended.
     */
    status?: string | undefined;
  };
}
