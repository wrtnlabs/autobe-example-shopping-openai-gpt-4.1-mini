import { tags } from "typia";

/**
 * Attachment file metadata record representing an uploaded file such as images,
 * documents, or multimedia related to products, posts, and system resources.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAttachments = {
  /** Unique identifier for the attachment record. */
  id: string & tags.Format<"uuid">;

  /** Stored file name including extension. */
  file_name: string;

  /** Publicly accessible URL pointing to the file location, typically via CDN. */
  file_url: string;

  /** MIME type of the file, e.g., image/png, application/pdf. */
  media_type: string;

  /** Size of the file in bytes. */
  file_size: number & tags.Type<"int32">;

  /** IP address from which the file was uploaded. */
  upload_ip?: string | null | undefined;

  /** Timestamp when the attachment was uploaded. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the attachment metadata was last modified. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the attachment was logically deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallAttachments {
  /** Request payload to create a new attachment file metadata record. */
  export type ICreate = {
    /** Stored file name including extension. */
    file_name: string;

    /**
     * Publicly accessible URL pointing to the file location, typically via
     * CDN.
     */
    file_url: string;

    /** MIME type of the file, e.g., image/png, application/pdf. */
    media_type: string;

    /** Size of the file in bytes. */
    file_size: number & tags.Type<"int32">;

    /** IP address from which the file was uploaded. */
    upload_ip?: string | null | undefined;
  };

  /** Payload for updating existing attachment file metadata. */
  export type IUpdate = {
    /** Stored file name including extension. */
    file_name?: string | undefined;

    /**
     * Publicly accessible URL pointing to the file location, typically via
     * CDN.
     */
    file_url?: string | undefined;

    /** MIME type of the file, e.g., image/png, application/pdf. */
    media_type?: string | undefined;

    /** Size of the file in bytes. */
    file_size?: (number & tags.Type<"int32">) | undefined;

    /** IP address from which the file was uploaded. */
    upload_ip?: string | null | undefined;
  };
}
