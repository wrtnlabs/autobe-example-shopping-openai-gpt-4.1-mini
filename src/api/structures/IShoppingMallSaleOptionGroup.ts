import { tags } from "typia";

/**
 * Represents groups of sale options used to organize option records.
 *
 * Option groups help in modular product configuration and management.
 *
 * Uniqueness of codes is mandatory, and audit timestamps support operational
 * tracking.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallSaleOptionGroup = {
  /** Unique identifier of the sale option group. */
  id: string & tags.Format<"uuid">;

  /**
   * Unique code for the option group.
   *
   * Business context: Used to identify option groups distinctly within the
   * sales platform. Must be unique.
   */
  code: string;

  /**
   * Name of the option group.
   *
   * Provide clear descriptive name for display and management.
   */
  name: string;

  /**
   * Timestamp when the option group was created.
   *
   * Used for audit and history.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the option group was last updated.
   *
   * Supports tracking changes.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Optional logical deletion timestamp, if the option group is soft deleted.
   *
   * Null if active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallSaleOptionGroup {
  /**
   * Request parameters for searching, filtering and pagination of sale option
   * groups.
   */
  export type IRequest = {
    /** Optional filter or search query string. */
    search?: string | null | undefined;

    /** Pagination page number. */
    page?: number | null | undefined;

    /** Maximum number of items per page. */
    limit?: number | null | undefined;

    /** Optional sorting order clause. */
    orderBy?: string | null | undefined;
  };

  /**
   * Payload for creating a new sales option group.
   *
   * Includes the unique group code and descriptive name.
   */
  export type ICreate = {
    /**
     * Unique code for the option group. Required.
     *
     * Must be unique and non-empty.
     */
    code: string;

    /** Name of the option group. Required. */
    name: string;
  };

  /**
   * Payload for updating a sales option group.
   *
   * Allows optional modification of code and name.
   *
   * Supports marking the record as deleted logically.
   */
  export type IUpdate = {
    /**
     * Option group code. Optional on update, but if provided, must be
     * unique.
     */
    code?: string | undefined;

    /** Option group name. Optional on update. */
    name?: string | undefined;

    /** Logical deletion date-time. Nullable to unset. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary object for sale option group including primary key, unique code,
   * and name.
   */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Unique ID of the sale option group.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique code for the option group.
     *
     * Identifier for mapping and display.
     */
    code: string;

    /**
     * Name of the option group.
     *
     * Display title.
     */
    name: string;
  };
}
