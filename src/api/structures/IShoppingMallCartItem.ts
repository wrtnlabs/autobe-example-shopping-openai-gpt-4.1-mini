import { tags } from "typia";

/**
 * A cart item belonging to a shopping cart, linking a specific product snapshot
 * with quantity and pricing.
 *
 * The entity manages lifecycle status, audit timestamps, and soft deletion.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCartItem = {
  /** UUID of the cart item */
  id: string & tags.Format<"uuid">;

  /** UUID of associated shopping cart */
  shopping_cart_id: string & tags.Format<"uuid">;

  /** UUID of associated product snapshot */
  shopping_sale_snapshot_id: string & tags.Format<"uuid">;

  /** Number of item units */
  quantity: number & tags.Type<"int32">;

  /** Price per unit at addition */
  unit_price: number;

  /** ISO 8601 timestamp of creation */
  created_at: string & tags.Format<"date-time">;

  /** ISO 8601 timestamp of last update */
  updated_at: string & tags.Format<"date-time">;

  /** ISO 8601 timestamp of deletion or null */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Status like 'pending', 'ordered', or 'cancelled' */
  status: string;
};
export namespace IShoppingMallCartItem {
  /**
   * Request type for filtering and paginating shopping mall cart items.
   *
   * Includes optional status filter and pagination parameters.
   *
   * Supports sorting and paging for cart item collections.
   */
  export type IRequest = {
    /** Optional filter by the status of cart items. */
    status?: string | undefined;

    /** Optional pagination page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional pagination limit for the number of items per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional sort order string (e.g., "created_at desc"). */
    orderBy?: string | null | undefined;
  };

  /**
   * Request body for creating a new shopping mall cart item.
   *
   * Includes cart association, product snapshot reference, quantity, unit
   * price, and initial status.
   *
   * Optional timestamps are system managed.
   */
  export type ICreate = {
    /** UUID of associated shopping cart */
    shopping_cart_id: string & tags.Format<"uuid">;

    /** UUID of product snapshot at add */
    shopping_sale_snapshot_id: string & tags.Format<"uuid">;

    /** Must be positive integer */
    quantity: number & tags.Type<"int32">;

    /** Price per unit at addition */
    unit_price: number;

    /** Initial status for the cart item */
    status: string;

    /** Optional deletion timestamp */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional creation timestamp, may be set by system */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Optional update timestamp */
    updated_at?: (string & tags.Format<"date-time">) | undefined;
  };

  /**
   * Request body for updating a shopping mall cart item.
   *
   * All fields are optional for partial updates.
   *
   * Soft deletion date can be explicitly set to null.
   */
  export type IUpdate = {
    /** Optional cart UUID to update */
    shopping_cart_id?: (string & tags.Format<"uuid">) | undefined;

    /** Optional product snapshot UUID */
    shopping_sale_snapshot_id?: (string & tags.Format<"uuid">) | undefined;

    /** Optional quantity update */
    quantity?: (number & tags.Type<"int32">) | undefined;

    /** Optional price update */
    unit_price?: number | undefined;

    /** Optional status update */
    status?: string | undefined;

    /** Nullable deletion timestamp */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional creation timestamp */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Optional update timestamp */
    updated_at?: (string & tags.Format<"date-time">) | undefined;
  };
}
