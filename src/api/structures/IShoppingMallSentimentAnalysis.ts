import { tags } from "typia";

/**
 * AI-analyzed customer sentiment data derived from product reviews, inquiries,
 * and other text inputs within the shopping mall system.
 *
 * Facilitates sentiment tracking over time per product and aggregated insights
 * to improve business decisions. Records include references to product and
 * user, sentiment scores, categories, and timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallSentimentAnalysis = {
  /**
   * Primary Key.
   *
   * Unique identifier for the sentiment analysis record.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the product analyzed.
   *
   * UUID of the product to which this sentiment analysis applies.
   */
  product_id: string & tags.Format<"uuid">;

  /**
   * Reference to the user who authored the sentiment data; nullable if
   * anonymous.
   *
   * Optional UUID of the user who created this sentiment analysis.
   */
  user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Sentiment score calculated by AI model, typically ranging from -1
   * (negative) to +1 (positive).
   *
   * The numerical sentiment value representing polarity.
   */
  sentiment_score: number;

  /**
   * Category of sentiment such as 'positive', 'neutral', or 'negative'.
   *
   * Categorical classification of sentiment.
   */
  sentiment_category: string;

  /**
   * Original text analyzed for sentiment.
   *
   * The source text used to compute sentiment.
   */
  source_text: string;

  /**
   * Date and time when the sentiment analysis was performed.
   *
   * Timestamp in ISO 8601 format.
   */
  analysis_date: string & tags.Format<"date-time">;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last record update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null if record is active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallSentimentAnalysis {
  /**
   * Request for filtered and paginated retrieval of AI-generated customer
   * sentiment analysis records.
   */
  export type IRequest = {
    /** Filter by product ID. */
    product_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by user ID. */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by sentiment category. */
    sentiment_category?: string | null | undefined;

    /** Minimum sentiment score for filtering. */
    sentiment_score_min?: number | null | undefined;

    /** Maximum sentiment score for filtering. */
    sentiment_score_max?: number | null | undefined;

    /** Start datetime for analysis date filter. */
    analysis_date_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** End datetime for analysis date filter. */
    analysis_date_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Limit number of records per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Order by field. */
    orderBy?: string | null | undefined;

    /** Order direction "asc" or "desc". */
    orderDirection?: string | null | undefined;
  };

  /**
   * Payload for creating a new customer sentiment analysis record.
   *
   * Includes references to the product and optional user, sentiment score,
   * category, source text, and analysis timestamp.
   */
  export type ICreate = {
    /**
     * Reference to the product analyzed.
     *
     * UUID of the product to which this sentiment analysis applies.
     */
    product_id: string & tags.Format<"uuid">;

    /**
     * Reference to the user who authored the sentiment data; nullable if
     * anonymous.
     *
     * Optional UUID of the user who created this sentiment analysis.
     */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Sentiment score calculated by AI model, typically ranging from -1
     * (negative) to +1 (positive).
     *
     * The numerical sentiment value representing polarity.
     */
    sentiment_score: number;

    /**
     * Category of sentiment such as 'positive', 'neutral', or 'negative'.
     *
     * Categorical classification of sentiment.
     */
    sentiment_category: string;

    /**
     * Original text analyzed for sentiment.
     *
     * The source text used to compute sentiment.
     */
    source_text: string;

    /**
     * Date and time when the sentiment analysis was performed.
     *
     * Timestamp in ISO 8601 format.
     */
    analysis_date: string & tags.Format<"date-time">;
  };

  /**
   * Payload for updating an existing customer sentiment analysis record.
   *
   * Allows modification of references to the product and user, sentiment
   * score, category, source text, analysis timestamp, and logical deletion
   * timestamp.
   */
  export type IUpdate = {
    /**
     * Reference to the product analyzed.
     *
     * UUID of the product to which this sentiment analysis applies.
     */
    product_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Reference to the user who authored the sentiment data; nullable if
     * anonymous.
     *
     * Optional UUID of the user who created this sentiment analysis.
     */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Sentiment score calculated by AI model, typically ranging from -1
     * (negative) to +1 (positive).
     *
     * The numerical sentiment value representing polarity.
     */
    sentiment_score?: number | undefined;

    /**
     * Category of sentiment such as 'positive', 'neutral', or 'negative'.
     *
     * Categorical classification of sentiment.
     */
    sentiment_category?: string | undefined;

    /**
     * Original text analyzed for sentiment.
     *
     * The source text used to compute sentiment.
     */
    source_text?: string | undefined;

    /**
     * Date and time when the sentiment analysis was performed.
     *
     * Timestamp in ISO 8601 format.
     */
    analysis_date?: (string & tags.Format<"date-time">) | undefined;

    /** Soft deletion timestamp; null if record is active. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary view of AI-analyzed customer sentiment records.
   *
   * Includes scores and categories for quick understanding of customer
   * feedback trends.
   */
  export type ISummary = {
    /** Unique identifier of the sentiment analysis record. */
    id: string & tags.Format<"uuid">;

    /** Reference to the product associated with the sentiment analysis. */
    product_id: string & tags.Format<"uuid">;

    /**
     * Sentiment score assigned by AI model, typically between -1.0
     * (negative) and 1.0 (positive).
     */
    sentiment_score: number;

    /** Categorization of sentiment: positive, neutral, or negative. */
    sentiment_category: string;

    /** Timestamp when the sentiment analysis was performed. */
    analysis_date: string & tags.Format<"date-time">;
  };
}
