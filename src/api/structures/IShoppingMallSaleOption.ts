import { tags } from "typia";

/**
 * Represents a shopping mall product sale option belonging to an option group
 * with unique code, name and type.
 *
 * This entity supports product configuration and pricing modules.
 *
 * Soft deletion is implemented by the deleted_at timestamp.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallSaleOption = {
  /** Unique identifier (UUID) for the sale option. */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the sale option group ID (UUID). This group categorizes this
   * sale option logically.
   */
  shopping_mall_sale_option_group_id: string & tags.Format<"uuid">;

  /**
   * Unique code representing this sale option. Used for business
   * identification and lookup.
   */
  code: string;

  /** Human-readable name of the sale option. */
  name: string;

  /** Type of sale option (e.g., selection, boolean). */
  type: string;

  /** Timestamp when the sale option was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to the sale option. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the sale option was logically deleted (soft delete). */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallSaleOption {
  /**
   * Request parameters for searching, filtering and pagination of shopping
   * mall sale options.
   */
  export type IRequest = {
    /**
     * Optional filter flag or criteria for search (customized per
     * implementation).
     */
    search?: string | null | undefined;

    /** Pagination page number. */
    page?: number | null | undefined;

    /** Maximum number of items per page. */
    limit?: number | null | undefined;

    /** Optional sorting order specification. */
    orderBy?: string | null | undefined;
  };

  /** Request body schema for creating a new sale option. */
  export type ICreate = {
    /** Reference ID to the sale option group. */
    shopping_mall_sale_option_group_id: string & tags.Format<"uuid">;

    /** Unique code for this sale option. */
    code: string;

    /** Human-readable name of the sale option. */
    name: string;

    /** Type of the sale option. */
    type: string;
  };

  /** Request body schema for updating an existing sale option. */
  export type IUpdate = {
    /** Reference ID to the sale option group. */
    shopping_mall_sale_option_group_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Unique code for this sale option. */
    code?: string | null | undefined;

    /** Human-readable name of the sale option. */
    name?: string | null | undefined;

    /** Type of the sale option. */
    type?: string | null | undefined;

    /** Soft delete timestamp. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information for a master sale option entry which defines option
   * behaviors and grouping.
   *
   * Includes identifiers, codes, names, option type, and audit timestamps.
   */
  export type ISummary = {
    /** Unique identifier of the sale option. */
    id: string & tags.Format<"uuid">;

    /** Sale option group ID the option belongs to. */
    shopping_mall_sale_option_group_id: string & tags.Format<"uuid">;

    /** Unique code of the sale option. */
    code: string;

    /** Name of the sale option. */
    name: string;

    /** Option type (e.g., selection, boolean). */
    type: string;

    /** Creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Last update timestamp. */
    updated_at: string & tags.Format<"date-time">;
  };
}
