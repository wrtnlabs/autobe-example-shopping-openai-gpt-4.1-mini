import { tags } from "typia";

/**
 * Shopping mall cart entity representing a customer's shopping cart session.
 *
 * This model keeps track of guest or member user associations, current cart
 * status, and audit timestamps for creation, updates, and soft deletion.
 *
 * The entity supports soft deletion with the `deleted_at` property.
 *
 * It is essential for managing the lifecycle and status of user carts within
 * the shopping mall platform.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCarts = {
  /** Unique identifier of the shopping cart. */
  id: string;

  /**
   * Guest user ID linked to this cart. Nullable if the cart belongs to a
   * member. Should be a UUID string or null.
   */
  guest_user_id?: string | null | undefined;

  /**
   * Member user ID linked to this cart. Nullable if the cart belongs to a
   * guest. Should be a UUID string or null.
   */
  member_user_id?: string | null | undefined;

  /** Current status of the cart (e.g., active, abandoned, expired). */
  status: string;

  /** Cart creation timestamp in ISO 8601 format. */
  created_at: string & tags.Format<"date-time">;

  /** Cart last updated timestamp in ISO 8601 format. */
  updated_at: string & tags.Format<"date-time">;

  /** Optional soft deletion timestamp in ISO 8601 format. Null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallCarts {
  /**
   * Request type to filter and paginate shopping mall carts.
   *
   * Includes optional filters for cart status, associated guest user, and
   * member user.
   *
   * Supports pagination and sorting options.
   *
   * This type is used for search and index operations on shopping carts.
   */
  export type IRequest = {
    /** Optional status filter to search carts. */
    status?: string | undefined;

    /** Optional guest user ID filter (UUID string) to find carts. */
    guest_user_id?: string | null | undefined;

    /** Optional member user ID filter (UUID string) to find carts. */
    member_user_id?: string | null | undefined;

    /** Optional page number for pagination (unsigned integer). */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional limit of records per page for pagination (unsigned integer). */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional sort order (e.g., "created_at desc"). */
    orderBy?: string | null | undefined;
  };

  /**
   * Payload for creating a new shopping mall cart.
   *
   * Includes optional association to either a guest or member user and the
   * initial status of the cart.
   */
  export type ICreate = {
    /**
     * Optional guest user ID linked to this cart (UUID string). Null if not
     * linked.
     */
    guest_user_id?: string | null | undefined;

    /**
     * Optional member user ID linked to this cart (UUID string). Null if
     * not linked.
     */
    member_user_id?: string | null | undefined;

    /** Current status of the cart. */
    status: string;
  };

  /**
   * Payload for updating an existing shopping mall cart.
   *
   * All fields are optional to support partial updates.
   *
   * Allows modifying associations, status, and soft delete timestamp.
   */
  export type IUpdate = {
    /** Optional guest user ID linked to this cart (UUID string) for update. */
    guest_user_id?: string | null | undefined;

    /** Optional member user ID linked to this cart (UUID string) for update. */
    member_user_id?: string | null | undefined;

    /** Optional current status of the cart. */
    status?: string | undefined;

    /**
     * Optional soft deletion timestamp in ISO 8601 format. Null if not
     * deleted.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summary of the shopping cart including ownership, timestamps, and status. */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Unique identifier of the shopping cart.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Optionally associated guest user's ID.
     *
     * Nullable; represents guest ownership of the cart.
     */
    guest_user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optionally associated member user's ID.
     *
     * Nullable; represents member ownership.
     */
    member_user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Date and time the cart was created.
     *
     * ISO 8601 datetime string.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Date and time the cart was last updated.
     *
     * ISO 8601 datetime.
     */
    updated_at: string & tags.Format<"date-time">;

    /** Current status string of the cart. */
    status: string;
  };
}
