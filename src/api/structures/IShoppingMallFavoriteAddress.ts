import { tags } from "typia";

/**
 * Stores customer's favorite shipping addresses by referencing member users and
 * address snapshots. Maintains timestamps for creation, updates, and logical
 * deletion for soft delete capability. Enforces uniqueness of favorite
 * addresses per member and snapshot pair.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallFavoriteAddress = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Belonged customer's {@link shopping_mall_memberusers.id}. */
  shopping_mall_memberuser_id: string & tags.Format<"uuid">;

  /**
   * Referenced address snapshot at the time of favoriting
   * {@link shopping_mall_snapshots.id}.
   */
  shopping_mall_snapshot_id: string & tags.Format<"uuid">;

  /** Favorite address creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Favorite address last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Logical deletion timestamp for soft delete. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallFavoriteAddress {
  /** Request object for filtering and paginating favorite address records. */
  export type IRequest = {
    /**
     * Filter by member user ID.
     *
     * UUID of member user requesting favorite addresses.
     */
    shopping_mall_memberuser_id?: string | null | undefined;

    /**
     * Filter by creation date start.
     *
     * ISO 8601 datetime string for filtering starting creation timestamp.
     */
    created_at_from?: string | null | undefined;

    /**
     * Filter by creation date end.
     *
     * ISO 8601 datetime string for filtering ending creation timestamp.
     */
    created_at_to?: string | null | undefined;

    /**
     * Page number for pagination.
     *
     * Positive integer indicating current fetch page.
     */
    page?: number | null | undefined;

    /**
     * Page size for pagination.
     *
     * Positive integer limiting records fetched per page.
     */
    limit?: number | null | undefined;

    /**
     * Sort order criteria.
     *
     * String denoting sort field and direction e.g., "created_at:asc".
     */
    sort?: string | null | undefined;
  };

  /**
   * Create a new favorite address record for a member user referencing an
   * address snapshot, preserving address state at favoriting. The operation
   * records creation and update timestamps and enforces uniqueness
   * constraints.
   *
   * Validates input to ensure member user and snapshot references exist and
   * are well-formed UUIDs.
   *
   * Authorization ensures only authenticated users can create their own
   * favorites.
   *
   * Operation writes to shopping_mall_favorite_addresses table.
   *
   * Supports personalized address management and notification features.
   */
  export type ICreate = {
    /** Belonged customer's {@link shopping_mall_memberusers.id}. */
    shopping_mall_memberuser_id: string & tags.Format<"uuid">;

    /**
     * Referenced address snapshot at the time of favoriting
     * {@link shopping_mall_snapshots.id}.
     */
    shopping_mall_snapshot_id: string & tags.Format<"uuid">;
  };

  /**
   * Update an existing favorite address record identified by its unique ID.
   * Allows changes to address snapshot references and other editable
   * properties while ensuring referential integrity.
   *
   * Update operation refreshes timestamps and maintains data integrity and
   * uniqueness constraints.
   *
   * Authorization restricts updates to the owning authenticated member user.
   *
   * Operates on shopping_mall_favorite_addresses table, supporting accurate
   * and current user address favorites management.
   */
  export type IUpdate = {
    /** Belonged customer's {@link shopping_mall_memberusers.id}. */
    shopping_mall_memberuser_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Referenced address snapshot at the time of favoriting
     * {@link shopping_mall_snapshots.id}.
     */
    shopping_mall_snapshot_id?: (string & tags.Format<"uuid">) | undefined;

    /** Logical deletion timestamp for soft delete. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information of a favorite address.
   *
   * Minimally includes reference to snapshot and creation date for UI
   * listing.
   */
  export type ISummary = {
    /** Unique identifier of the favorite address */
    id: string & tags.Format<"uuid">;

    /**
     * Reference to address snapshot at the time of favoriting, preserving
     * address state.
     */
    shopping_mall_snapshot_id: string & tags.Format<"uuid">;

    /** Timestamp when the favorite address was created. */
    created_at: string & tags.Format<"date-time">;
  };
}
