import { tags } from "typia";

/**
 * Contains configurations and execution logs of analytics dashboards providing
 * real-time insights for the shopping mall business performance. Records
 * dashboard types, filter settings, last execution timestamps, and related
 * metadata to support dashboard refresh and access control.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAnalyticsDashboard = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /**
   * Type/category of the analytics dashboard (e.g., 'sales_overview',
   * 'customer_segmentation').
   */
  dashboard_type: string;

  /** Serialized JSON string of dashboard filter and setting configurations. */
  configuration: string;

  /** Timestamp when the dashboard was last executed or refreshed. */
  last_run_at: string & tags.Format<"date-time">;

  /**
   * Current operational status of the dashboard (e.g., 'active', 'inactive',
   * 'error').
   */
  status: string;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last record update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp if the record is logically deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallAnalyticsDashboard {
  /**
   * Request parameters for filtering and paginating analytics dashboards.
   *
   * Allows filtering by dashboard type, status, last run timestamp, and
   * pagination controls.
   */
  export type IRequest = {
    /** Filter by dashboard type. */
    dashboard_type?: string | null | undefined;

    /** Filter by status. */
    status?: string | null | undefined;

    /** Filter by last run date greater than or equal. */
    last_run_after?: (string & tags.Format<"date-time">) | null | undefined;

    /** Pagination parameter specifying which page to retrieve. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of items per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Sort key, e.g., 'created_at' or 'dashboard_type'. */
    sortBy?: string | null | undefined;

    /** Sort order, either 'asc' or 'desc'. */
    sortOrder?: string | null | undefined;
  };

  /** Information required to create a new analytics dashboard. */
  export type ICreate = {
    /** Type/category of the analytics dashboard (e.g., 'sales_overview') */
    dashboard_type: string;

    /** Serialized JSON string of dashboard filter and setting configurations */
    configuration: string;

    /** Timestamp when the dashboard was last executed or refreshed */
    last_run_at: string & tags.Format<"date-time">;

    /**
     * Current operational status of the dashboard (e.g., 'active',
     * 'inactive')
     */
    status: string;
  };

  /** Information for updating an existing analytics dashboard. */
  export type IUpdate = {
    /** Type/category of the analytics dashboard (e.g., 'sales_overview') */
    dashboard_type?: string | undefined;

    /** Serialized JSON string of dashboard filter and setting configurations */
    configuration?: string | undefined;

    /** Timestamp when the dashboard was last executed or refreshed */
    last_run_at?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Current operational status of the dashboard (e.g., 'active',
     * 'inactive')
     */
    status?: string | undefined;

    /** Soft deletion timestamp if applicable */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary data of shopping mall analytics dashboard.
   *
   * Provides essential identifying and status information suitable for list
   * views.
   */
  export type ISummary = {
    /**
     * Unique identifier (UUID) of the analytics dashboard.
     *
     * Serves as the primary key for referencing the dashboard in paginated
     * lists or summaries.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Type or category of the analytics dashboard.
     *
     * Provides context for what kind of insights the dashboard delivers.
     */
    dashboard_type: string;

    /**
     * Timestamp when the dashboard was last run or refreshed.
     *
     * Useful for users to know how current the displayed data is.
     */
    last_run_at: string & tags.Format<"date-time">;

    /**
     * Current status of the dashboard.
     *
     * Indicates if the dashboard is active, inactive, or in error state.
     */
    status: string;
  };
}
