import { tags } from "typia";

/**
 * Product category record in the shopping mall with hierarchical support and
 * multi-channel configuration.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCategory = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Unique category code. */
  code: string;

  /** Category name. */
  name: string;

  /** Category status such as active or inactive. */
  status: string;

  /** Optional category description. */
  description?: string | null | undefined;

  /** Creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Logical deletion timestamp. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallCategory {
  /** Category search filters and pagination parameters */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limit of records per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Search string filter for category name or code. */
    search?: string | null | undefined;

    /** Status filter for categories such as active or inactive. */
    status?: string | null | undefined;
  };

  /**
   * Create a new product category with specified details.
   *
   * AdminUser authorization required.
   *
   * Returns the created product category record.
   *
   * Validates uniqueness and required fields.
   */
  export type ICreate = {
    /** Unique category code. */
    code: string;

    /** Category name. */
    name: string;

    /** Category status such as active or inactive. */
    status: string;

    /** Optional category description. */
    description?: string | null | undefined;
  };

  /**
   * Input type for updating a shopping mall category entity.
   *
   * Allows partial update of properties such as code, name, status, and
   * description.
   *
   * Timestamps may be included for administrative tracking but are optional.
   *
   * Soft deletion timestamp can be set or cleared.
   *
   * All properties are optional in update contexts.
   */
  export type IUpdate = {
    /** Unique code of the category; can be updated */
    code?: string | undefined;

    /** Name of the category */
    name?: string | undefined;

    /** Status of the category */
    status?: string | undefined;

    /** Description of the category */
    description?: string | null | undefined;

    /** Record creation timestamp */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Record last update timestamp */
    updated_at?: (string & tags.Format<"date-time">) | undefined;

    /** Timestamp of deletion if soft-deleted */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary of shopping mall category with essential identifying fields and
   * status.
   */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Unique category identifier.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique category code.
     *
     * System-wide unique identifier for category.
     */
    code: string;

    /**
     * Category name.
     *
     * Title displayed to users.
     */
    name: string;

    /**
     * Category status.
     *
     * Current lifecycle status of the category.
     */
    status: string;
  };
}
