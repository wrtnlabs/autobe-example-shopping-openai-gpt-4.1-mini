/// AI-powered personalized product recommendations for shopping mall
/// customers. Stores recommendation data generated by AI models to enhance
/// user shopping experience through tailored product suggestions. Each
/// record includes user context, recommendation type, algorithm details,
/// recommendation payload, status, and timestamps.
///
/// @namespace AdvancedFeatures
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_recommendations {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the member customer receiving the recommendation.
  user_id String
  
  /// Type/category of recommendation (e.g., 'personal', 'trending',
  /// 'category_top').
  recommendation_type String
  
  /// Version identifier of the AI algorithm that generated this recommendation.
  algorithm_version String
  
  /// Serialized JSON payload containing recommended product IDs and metadata.
  payload String
  
  /// Current status of the recommendation record ('active', 'archived', etc.).
  status String
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last record update timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp; null if record is active.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  @@unique([user_id, recommendation_type, algorithm_version], map: "shopping_mall_ai_recommendations_user_id_recommendatio_af8c4a86")
  @@index([user_id, status])
}

/// Tracks suspicious activities detected by AI fraud detection systems
/// within the shopping mall platform. Enables auditing and investigation of
/// potential security incidents to enhance platform trust and user safety.
/// Records include customer and order references, detection types,
/// confidence levels, resolutions, and timestamps.
///
/// @namespace AdvancedFeatures
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_fraud_detections {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the member customer associated with the fraud detection
  /// event.
  user_id String
  
  /// Related order suspected of fraud, nullable if not order-specific.
  order_id String?
  
  /// Type/category of fraud detection (e.g., 'payment_fraud',
  /// 'account_takeover').
  detection_type String
  
  /// Confidence score of AI detection between 0.0 and 1.0.
  confidence_score Float
  
  /// Resolution status of the fraud case ('pending', 'investigating',
  /// 'resolved', 'dismissed').
  resolution_status String
  
  /// Detailed description or notes about the fraud detection event.
  details String?
  
  /// Timestamp when the fraud detection occurred.
  detected_at DateTime
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last record update timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp; null if record is active.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user shopping_mall_memberusers @relation(fields: [user_id], references: [id], onDelete: Cascade)
  order shopping_mall_orders? @relation(fields: [order_id], references: [id], onDelete: Cascade)
  
  @@index([order_id])
  
  @@unique([user_id, order_id, detection_type, detected_at], map: "shopping_mall_fraud_detections_user_id_order_id_detect_d7ba01a7")
  @@index([user_id, resolution_status])
}

/// Dynamic pricing records capturing price adjustments driven by AI
/// algorithms for products in the shopping mall. Supports business
/// strategies for price optimization, seasonal discounts, and personalized
/// pricing. Each record references product identifiers, pricing rules,
/// adjustment values, algorithm versions, and status with timestamps.
///
/// @namespace AdvancedFeatures
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_dynamic_pricing {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the product affected by dynamic pricing.
  product_id String
  
  /// ID of the pricing rule applied for the adjustment.
  pricing_rule_id String
  
  /// The new price after applying the dynamic pricing adjustment.
  adjusted_price Float
  
  /// Version of the AI algorithm that computed this price adjustment.
  algorithm_version String
  
  /// Current status of the pricing record (e.g. 'active' or 'inactive').
  status String
  
  /// Date and time when the dynamic price becomes effective.
  effective_from DateTime
  
  /// Date and time after which the price is no longer effective.
  effective_to DateTime?
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last record update timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp if record is deleted logically.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  @@unique([product_id, pricing_rule_id, effective_from], map: "shopping_mall_dynamic_pricing_product_id_pricing_rule__37f13521")
  @@index([product_id, status, effective_from], map: "shopping_mall_dynamic_pricing_product_id_status_effect_9b09ebc8")
}

/// Stores AI-analyzed customer sentiment data derived from product reviews,
/// inquiries, and other text inputs within the shopping mall system.
/// Facilitates sentiment tracking over time per product and aggregated
/// insights to improve business decisions. Records include references to
/// product and user, sentiment scores, categories, and timestamps.
///
/// @namespace AdvancedFeatures
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_sentiment_analysis {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the product analyzed.
  product_id String
  
  /// Reference to the user who authored the sentiment data; nullable if
  /// anonymous.
  user_id String?
  
  /// Sentiment score calculated by AI model, typically ranging from -1
  /// (negative) to +1 (positive).
  sentiment_score Float
  
  /// Category of sentiment such as 'positive', 'neutral', or 'negative'.
  sentiment_category String
  
  /// Original text analyzed for sentiment.
  source_text String
  
  /// Date and time when the sentiment analysis was performed.
  analysis_date DateTime
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last record update timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp; null if record is active.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  product shopping_mall_sales @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user shopping_mall_memberusers? @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  @@index([user_id])
  
  @@unique([product_id, user_id, analysis_date], map: "shopping_mall_sentiment_analysis_product_id_user_id_an_4e3bac65")
  @@index([product_id, sentiment_category], map: "shopping_mall_sentiment_analysis_product_id_sentiment__31bbb7d8")
}

/// Contains configurations and execution logs of analytics dashboards
/// providing real-time insights for the shopping mall business performance.
/// Records dashboard types, filter settings, last execution timestamps, and
/// related metadata to support dashboard refresh and access control.
///
/// @namespace AdvancedFeatures
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_analytics_dashboards {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Type/category of the analytics dashboard (e.g., 'sales_overview',
  /// 'customer_segmentation').
  dashboard_type String
  
  /// Serialized JSON string of dashboard filter and setting configurations.
  configuration String
  
  /// Timestamp when the dashboard was last executed or refreshed.
  last_run_at DateTime
  
  /// Current operational status of the dashboard (e.g., 'active', 'inactive',
  /// 'error').
  status String
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last record update timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp if the record is logically deleted.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  @@unique([dashboard_type])
  @@index([dashboard_type, status])
}